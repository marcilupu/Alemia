{"version":3,"sources":["App.js","index.js"],"names":["API_BASE_ADDRESS","App","props","default_state","current_step","selected_filename","predicted_grade","adjusted_grade","state","selectArchive","bind","adjustGrade","sendChangeRequest","retrainModel","restartGradingProcess","event","form_data","FormData","append","target","files","axios","post","headers","then","response","setState","name","data","catch","error","console","log","this","value","get","params","first_step_classes","second_step_classes","push","join","className","Container","src","alt","Jumbotron","Form","File","label","custom","onChange","InputGroup","Control","type","placeholder","Append","Button","variant","onClick","size","block","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.608f5681.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {\r\n    Container,\r\n    Jumbotron,\r\n    Form,\r\n    InputGroup,\r\n    Button\r\n} from \"react-bootstrap\"\r\nimport axios from \"axios\"\r\nimport \"./stylesheets/App.css\"\r\n\r\nconst API_BASE_ADDRESS = \"http://127.0.0.1:3001\"\r\n\r\nclass App extends React.Component{\r\n\r\n    default_state = {\r\n        current_step: 1,\r\n        selected_filename: \"Archive\",\r\n        predicted_grade: \"NaN\",\r\n        adjusted_grade: \"\"\r\n    }\r\n\r\n    constructor(props){\r\n\r\n        super(props)\r\n\r\n        /* Initialize the state */\r\n        this.state = this.default_state\r\n\r\n        /* Bind methods */\r\n        this.selectArchive = this.selectArchive.bind(this)\r\n        this.adjustGrade = this.adjustGrade.bind(this)\r\n        this.sendChangeRequest = this.sendChangeRequest.bind(this)\r\n        this.retrainModel = this.retrainModel.bind(this)\r\n        this.restartGradingProcess = this.restartGradingProcess.bind(this)\r\n\r\n    }\r\n\r\n    selectArchive(event){\r\n\r\n        var form_data = new FormData();\r\n\r\n        form_data.append(\"file\", event.target.files[0])\r\n\r\n        axios.post(API_BASE_ADDRESS + \"/predict\", form_data, {\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        }).then(response => {\r\n            this.setState({\r\n                current_step: 2,\r\n                selected_filename: event.target.files[0].name,\r\n                predicted_grade: response.data.predicted_grade\r\n            })\r\n        }).catch(error => console.log(error));\r\n\r\n    }\r\n\r\n    adjustGrade(event){\r\n        this.setState({\r\n            adjusted_grade: event.target.value\r\n        })\r\n    }\r\n\r\n    sendChangeRequest(){\r\n        axios.get(API_BASE_ADDRESS + \"/adjust_grade\", {\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\"\r\n            },\r\n            params: {\r\n                adjusted_grade: this.state.adjusted_grade\r\n            }\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n    retrainModel(){\r\n        axios.get(API_BASE_ADDRESS + \"/retrain_model\", {\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\"\r\n            }\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n    restartGradingProcess(){\r\n        this.setState(this.default_state)\r\n    }\r\n\r\n    render(){\r\n\r\n        var first_step_classes = [\"process-step\"]\r\n        var second_step_classes = [\"process-step\"]\r\n\r\n        // Get classes for each jumbotron\r\n        if (this.state.current_step === 1){\r\n            first_step_classes.push(\"current\")\r\n            second_step_classes.push(\"inactive\")\r\n        }\r\n        else{\r\n            first_step_classes.push(\"done\")\r\n            second_step_classes.push(\"current\")\r\n        }\r\n        first_step_classes = first_step_classes.join(\" \")\r\n        second_step_classes = second_step_classes.join(\" \")\r\n\r\n        return (\r\n            <div className=\"App\">\r\n\r\n                <Container>\r\n\r\n                    {/* Logo and application name */}\r\n                    <div className=\"logo-container\">\r\n                        <img src=\"images/logo.png\" alt=\"Naevia Logo\"></img>\r\n                        <h1>Alemia</h1>\r\n                    </div>\r\n\r\n                    {/* Field for uploading a file */}\r\n                    <Jumbotron className={first_step_classes}>\r\n                        <h3>First Step</h3>\r\n                        <p>Select the <code>.zip</code> archive containing the source code of the student you want to grade.</p>\r\n                        <Form>\r\n                            <Form.File\r\n                                label={this.state.selected_filename}\r\n                                custom\r\n                                onChange={this.selectArchive}\r\n                            />\r\n                        </Form>\r\n                    </Jumbotron>\r\n\r\n                    {/* Place to bind the predicted grade, change it or retrain the model */}\r\n                    <Jumbotron className={second_step_classes}>\r\n\r\n                        <h3>Second Step</h3>\r\n                        <p>Review the predicted grade. If you consider it is not right, create a change request to improve the machine learning models trained in the future.</p>\r\n\r\n                        <p className=\"grade\">The predicted grade is <b>{this.state.predicted_grade}</b>.</p>\r\n                        <Form>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Manually adjusted grade\"\r\n                                    value={this.state.adjusted_grade}\r\n                                    onChange={this.adjustGrade}\r\n                                />\r\n                                <InputGroup.Append>\r\n                                    <Button\r\n                                        variant=\"outline-secondary\"\r\n                                        onClick={this.sendChangeRequest}\r\n                                    >\r\n                                        Send a change request\r\n                                    </Button>\r\n                                </InputGroup.Append>\r\n                            </InputGroup>\r\n                        </Form>\r\n\r\n                        <p>Go to the next student or retrain the machine learning model. When the training process ends, the new model will automatically replace the current one.</p>\r\n                        \r\n                        <Button\r\n                            variant=\"secondary\"\r\n                            size=\"sm\"\r\n                            block\r\n                            onClick={this.retrainModel}\r\n                        >\r\n                            Retrain the model\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"secondary\"\r\n                            size=\"sm\"\r\n                            block\r\n                            onClick={this.restartGradingProcess}\r\n                        >\r\n                            Restart the grading process\r\n                        </Button>\r\n\r\n                    </Jumbotron>\r\n\r\n                </Container>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./stylesheets/index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}